@property --scroll-fade-height-top {
  syntax: '<length>';
  inherits: false;
  initial-value: 20px;
}

@property --scroll-fade-height-bottom {
  syntax: '<length>';
  inherits: false;
  initial-value: 20px;
}

.wrapper {
  width: 100%;
  height: 100%;
  max-height: 100%;
  position: relative;

  .scrollToTop {
    color: alpha(light-dark(var(--mantine-color-black), var(--mantine-color-white)), 0.5);
    position: absolute;
    top: 0;
    left: 50%;
    z-index: calc(var(--mantine-z-index-modal) - 1);
    display: none;
    transform: translateX(-50%);

    &:hover {
      color: alpha(light-dark(var(--mantine-color-black), var(--mantine-color-white)), 0.65);
    }

    &.show {
      display: block;
    }
  }

  .simplebar {
    width: 100%;
    height: 100%;
    overflow-x: hidden;

    /* `.simplebar-content-wrapper` doesn't have a className when using render function. */
    :has(> :global(.simplebar-content)) {
      /* Hide native scrollbars */
      scrollbar-width: none;
    }

    &.fadeMask {
      :has(> :global(.simplebar-content)) {
        mask-image: linear-gradient(
          to bottom,
          transparent 0%,
          rgb(0 0 0 / 100%) var(--scroll-fade-height-top),
          rgb(0 0 0 / 100%) calc(100% - var(--scroll-fade-height-bottom)),
          transparent 100%
        );
        transition-duration: var(--transition-duration-extra-short);
        transition-property: --scroll-fade-height-top, --scroll-fade-height-bottom;
        transition-timing-function: var(--transition-timing-function);
      }

      &.top :has(> :global(.simplebar-content)) {
        --scroll-fade-height-top: 0;
      }

      &.bottom :has(> :global(.simplebar-content)) {
        --scroll-fade-height-bottom: 0;
      }
    }
  }
}
